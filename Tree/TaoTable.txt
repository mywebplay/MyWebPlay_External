<style>
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }
    th, td {
      border: 1px solid #ccc;
      padding: 6px 10px;
      text-align: left;
    }
    th {
      background: #eee;
    }
    input[type="text"] {
      width: 100%;
      max-width: 300px;
      padding: 5px;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>

<input type="text" id="searchBox" placeholder="Tìm kiếm" onchange="renderTable()" />

<table id="dataTable"></table>

<script>
  const raw = localStorage.getItem("tableX");
  if (!raw) {
    alert("Không có dữ liệu trong localStorage key 'tableX'");
    throw new Error("Missing data");
  }

  const lines = raw.trim().split("\n");
  if (lines.length < 2) {
    alert("Dữ liệu không hợp lệ!");
    throw new Error("Invalid data format");
  }

  // Dòng tiêu đề có định dạng width (***)
  const headers = lines[0].split("\t").map(h => {
    const [label, width] = h.split("***");
    return { label: label.trim(), width: parseInt(width.trim()) || 10 };
  });

  // Dữ liệu bảng
  const rows = lines.slice(1).map(line => line.split("\t"));

  // Xoá localStorage sau khi đọc
  localStorage.removeItem("tableX");

  function renderTable() {
    const keyword = document.getElementById("searchBox").value.trim();
    let filteredRows = [...rows];

    if (keyword !== "") {
      try {
        const regex = new RegExp(keyword, "i");
        filteredRows = rows.filter(row =>
          row.some(cell => regex.test(cell))
        );
      } catch (e) {
        alert("Biểu thức tìm kiếm không hợp lệ!");
        return;
      }
    }

    const table = document.getElementById("dataTable");
    table.innerHTML = "";

    // Header
    const thead = document.createElement("thead");
    const headerRow = document.createElement("tr");

    const sttTh = document.createElement("th");
    sttTh.textContent = "STT";
    headerRow.appendChild(sttTh);

    headers.forEach(h => {
      const th = document.createElement("th");
      th.textContent = h.label;
      th.style.width = h.width + "%";
      headerRow.appendChild(th);
    });

    thead.appendChild(headerRow);
    table.appendChild(thead);

    // Body
    const tbody = document.createElement("tbody");
    filteredRows.forEach((row, i) => {
      const tr = document.createElement("tr");

      const sttTd = document.createElement("td");
      sttTd.textContent = i + 1;
      tr.appendChild(sttTd);

      row.forEach(cell => {
        const td = document.createElement("td");
        td.textContent = cell;
        tr.appendChild(td);
      });

      tbody.appendChild(tr);
    });

    table.appendChild(tbody);
  }

  // Initial render
  renderTable();
</script>
