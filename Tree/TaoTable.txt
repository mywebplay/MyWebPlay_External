<style>
  body { font-family: Arial, sans-serif; margin: 20px; }
  #searchInput {
    width: 100%;
    box-sizing: border-box;
    margin-bottom: 12px;
    padding: 8px 10px;
    font-size: 16px;
  }
  table {
    border-collapse: collapse;
    width: 100%;
    table-layout: fixed;
  }
  th, td {
    border: 1px solid #ccc;
    padding: 6px 8px;
    word-wrap: break-word;
    white-space: normal;
    text-align: left;
    vertical-align: top;
  }
  th.stt-col, td.stt-col {
    width: 5%;
    text-align: center;
  }
  #noData {
    font-style: italic;
    color: #888;
  }
</style>
</head>
<body>

<input type="text" id="searchInput" placeholder="Tìm kiếm..." autocomplete="off" />

<div id="tableContainer"></div>

<script>
(() => {
  const rawData = localStorage.getItem("tableX");
  if (!rawData || !rawData.trim()) {
    document.getElementById("tableContainer").innerHTML = '<div id="noData">Không có dữ liệu để hiển thị.</div>';
    return;
  }

  const rows = rawData.trim().split(/\r?\n/);
 // localStorage.removeItem("tableX");

  const searchInput = document.getElementById("searchInput");

  function escapeHTML(str) {
    return String(str)
      .replace(/&/g, "&amp;")
      .replace(/</g, "&lt;")
      .replace(/>/g, "&gt;")
      .replace(/"/g, "&quot;")
      .replace(/'/g, "&#039;");
  }

  function renderTable(dataRows) {
    const container = document.getElementById("tableContainer");
    if (!dataRows || dataRows.length < 2) {
      container.innerHTML = '<div id="noData">Không có dữ liệu để hiển thị.</div>';
      return;
    }

    const headerCols = dataRows[0].split("\t");

    let html = '<table><thead><tr>';
    html += '<th class="stt-col">STT</th>';
    headerCols.forEach(col => {
      let [text, width] = col.split("***");
      width = width ? width.trim() : "";
      html += `<th style="width:${width}%">${escapeHTML(text.trim())}</th>`;
    });
    html += '</tr></thead><tbody>';

    let stt = 0;
    for(let i=1; i<dataRows.length; i++) {
      if(!dataRows[i].trim()) continue;
      let cols = dataRows[i].split("\t");
      stt++;
      html += `<tr><td class="stt-col">${stt}</td>`;
      for(let j=0; j<headerCols.length; j++) {
        let val = cols[j] || "";
        html += `<td>${escapeHTML(val)}</td>`;
      }
      html += '</tr>';
    }
    html += '</tbody></table>';
    container.innerHTML = html;
  }

  function onSearchInput() {
    const keyword = searchInput.value.trim();
    if(keyword === "") {
      renderTable(rows);
      return;
    }

    const filtered = [rows[0]];
    for(let i=1; i<rows.length; i++) {
      let cols = rows[i].split("\t");
      let matched = false;

      try {
        const re = new RegExp(keyword, "i");
        for(let j=0; j<cols.length; j++) {
          if(re.test(cols[j] || "")) {
            matched = true;
            break;
          }
        }
      } catch {
        for(let j=0; j<cols.length; j++) {
          if((cols[j] || "").toLowerCase().includes(keyword.toLowerCase())) {
            matched = true;
            break;
          }
        }
      }

      if(matched) filtered.push(rows[i]);
    }

    renderTable(filtered);
  }

  searchInput.addEventListener("input", onSearchInput);

  // Render ban đầu
  renderTable(rows);
})();
</script>
