<style>
 body {
      margin: 0;
      background-color: #007177;
      overflow: hidden;
    }
   canvas {
  width: 100%;
  height: 60vh;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
   #tapX{
   justify-content:center;
  text-align:center;
  color:blue;
}
    audio {
      position: fixed;
      bottom: 10px;
      left: 50%;
      transform: translateX(-50%);
    }
</style>

<audio id="audio" hidden autoplay>
  <source id="linkmp3" src="http://normalwebbasic.somee.com/karaoke_Example/ExamKara/NhacDemo.mp3" type="audio/mp3">
</audio>
<canvas id="canvas"></canvas>
<h1 id="tapX">Vui l√≤ng ƒë·ª£i kho·∫£ng ch·ª´ng 5s r·ªìi tap v√†o m√†n h√¨nh üòÅ</h1>
<script>
var loaded = 0;
var audioElement = document.getElementById('audio');

document.body.addEventListener('click', function () {
    audioElement.play();
});

setInterval(function () {
    if (loaded === 1) return;

    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');
    const audio = audioElement; // <-- thay ƒë·ªïi t√™n bi·∫øn, gi·ªØ logic y nh∆∞ c≈©
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight / 2;

    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();
    const analyser = audioCtx.createAnalyser();
    const source = audioCtx.createMediaElementSource(audio);
    source.connect(analyser);
    analyser.connect(audioCtx.destination);
    analyser.fftSize = 1024;

    const bufferLength = analyser.fftSize;
    const dataArray = new Uint8Array(bufferLength);

    const params = new URLSearchParams(window.location.search);

    if (params.has('link')) {
        const link = params.get('link');
        document.getElementById("linkmp3").src = link;
        audio.load();
    }

    function drawWaveform() {
        requestAnimationFrame(drawWaveform);

        analyser.getByteTimeDomainData(dataArray);

        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        ctx.lineWidth = 2;
        ctx.strokeStyle = '#00f6ff';
        ctx.shadowColor = '#00f6ff';
        ctx.shadowBlur = 20;

        ctx.beginPath();

        const sliceWidth = canvas.width * 1.0 / bufferLength;
        let x = 0;

        for (let i = 0; i < bufferLength; i++) {
            const v = dataArray[i] / 128.0;
            const y = v * canvas.height / 2;

            if (i === 0) {
                ctx.moveTo(x, y);
            } else {
                ctx.lineTo(x, y);
            }

            x += sliceWidth;
        }

        ctx.lineTo(canvas.width, canvas.height / 2);
        ctx.stroke();
    }

    audio.addEventListener('play', function () {
        audioCtx.resume().then(() => drawWaveform());
        document.getElementById("tapX").remove();
    });

    loaded = 1;
}, 10);
</script>

